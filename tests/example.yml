testcases:
  -
    tcid: "TC_src_Kafka_sink_Kafka"
    description: "Source: Kafka, Sink: Kafka"
    source:
      type: "Kafka"
      kafka:
        brokers: "localhost:9092"
        topic: "USVC.Test"
      serialize:
        enable: True
        type: "Binary"
    sink:
      type: "Kafka"
      kafka:
        brokers: "localhost:9092"
        topic: "USVC.Test"
        group: "USVC.Clients"
      serialize:
        enable: True
        type: "Binary"
    payloads:
      -
        input: "201.in"
        output: "201.out"
        verify: "NEG"
      -
        input: "101.in"
        output: "101.out"
      -
        input: "102.in"
        output: "102.out"
  -
    tcid: "TC_src_KafkaAvro_sink_KafkaAvro"
    description: "Source: Kafka with Avro, Sink: Kafka with Avro"
    source:
      type: "Kafka"
      kafka:
        brokers: "localhost:9092"
        topic: "USVC.Test"
      serialize:
        enable: True
        type: "Avro"
        avro:
          schema: "users.avsc"
    sink:
      type: "Kafka"
      kafka:
        brokers: "localhost:9092"
        topic: "USVC.Test"
        group: "USVC.Clients"
        timeout: 15
      serialize:
        enable: True
        type: "Avro"
        avro:
          schema: "users.avsc"
    payloads:
      -
        input: "101.in"
        output: "101.out"
      -
        input: "201.in"
        output: "201.out"
        verify: "NEG"
      -
        input: "102.in"
        output: "102.out"
  -
    tcid: "TC_src_CFKafka_sink_CFKafka"
    description: "Source: CFKafka, Sink: CFKafka"
    source:
      type: "CFKafka"
      cfkafka:
        brokers: "localhost:9092"
        topic: "USVC.Test"
        schema.registry: "http://localhost:8081"
        schema.file: "users.avsc"
      serialize:
        enable: False
    sink:
      type: "CFKafka"
      cfkafka:
        brokers: "localhost:9092"
        topic: "USVC.Test"
        group: "USVC.Clients"
        timeout: 15
        schema.registry: "http://localhost:8081"
      serialize:
        enable: False
    payloads:
      -
        input: "101.in"
        output: "101.out"
      -
        input: "102.in"
        output: "102.out"
      -
        input: "201.in"
        output: "201.out"
        verify: "NEG"
  -
    tcid: "TC_pets_rest1"
    description: "Source: REST, Sink: None"
    source:
      type: "REST"
      rest:
        url.base: "http://localhost:8080"
      serialize:
        enable: False
    sink:
      type: "None"
      serialize:
        enable: False
    payloads:
      -
        request:
          method: "GET"
          uri: "/pets/123"
          headers: >
            {
              "Accept": "application/json"
            }
          body: null
        response:
          code: 404
          headers: >
            {
              "Content-Length": "12",
              "Content-Type": "application/json"
            }
          body: "Not found"
      -
        request:
          method: "PUT"
          uri: "/pets/123"
          headers: >
            {
              "Accept": "application/json",
              "Content-Type": "application/json"
            }
          body: >
            {
              "id": "123",
              "animal_type": "cat",
              "name": "Tigger",
              "tags": {}
            }
        response:
          code: 201
          headers: >
            {
              "Content-Length": "0",
              "Content-Type": "application/json"
            }
          body: ""
      -
        request:
          method: "GET"
          uri: "/pets/123"
          headers: >
            {
              "Accept": "application/json"
            }
          body: null
        response:
          code: 200
          headers: >
            {
              "Content-Type": "application/json"
            }
          body: >
            {
              "id": "123",
              "animal_type": "cat",
              "name": "Tigger",
              "tags": {}
            }
      -
        request:
          method: "PUT"
          uri: "/pets/123"
          headers: >
            {
              "Accept": "application/json",
              "Content-Type": "application/json"
            }
          body: >
            {
              "id": "123",
              "animal_type": "cat",
              "name": "Jasper",
              "tags": {}
            }
        response:
          code: 200
          headers: >
            {
              "Content-Length": "0",
              "Content-Type": "application/json"
            }
          body: ""
      -
        request:
          method: "GET"
          uri: "/pets/123"
          headers: >
            {
              "Accept": "application/json"
            }
          body: null
        response:
          code: 200
          headers: >
            {
              "Content-Type": "application/json"
            }
          body: >
            {
              "id": "123",
              "animal_type": "cat",
              "name": "Jasper",
              "tags": {}
            }
      -
        request:
          method: "DELETE"
          uri: "/pets/123"
          headers: >
            {
              "Accept": "application/json"
            }
          body: null
        response:
          code: 204
          headers: >
            {
              "Content-Length": "0",
              "Content-Type": "application/json"
            }
          body: ""
      -
        request:
          method: "DELETE"
          uri: "/pets/123"
          headers: >
            {
              "Accept": "application/json"
            }
          body: null
        response:
          code: 404
          headers: >
            {
              "Content-Length": "0",
              "Content-Type": "application/json"
            }
          body: ""
      -
        request:
          method: "GET"
          uri: "/pets/123"
          headers: >
            {
              "Accept": "application/json"
            }
          body: null
        response:
          code: 404
          headers: >
            {
              "Content-Length": "12",
              "Content-Type": "application/json"
            }
          body: "Not found"

