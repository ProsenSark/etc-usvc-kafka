---
- config:
  - testset: "Pet tests"
  - timeout: 100  # Increase timeout from the default 10 seconds
- test:
  - name: "Create/update pet"
  - url: "/pets/123"
  - method: "PUT"
  - headers: {
      "Accept": "application/json",
      "Content-Type": "application/json"
    }
  - body: '{
      "id": 123,
      "animal_type": "cat",
      "name": "Tigger",
      "tags": {}
    }'
  - expected_status: [201]
  - validators:  # This is how we do more complex testing!
    - compare: {header: content-type, comparator: contains, expected: "json"}
    - compare: {header: content-length, comparator: str_eq, expected: "0"}
    - compare: {raw_body: "", expected: "" }  # Tests on raw response
- test:
  - name: "Get pet"
  - url: "/pets/123"
  - method: "GET"
  - headers: {
      "Accept": "application/json"
    }
  - expected_status: [200]
  - validators:  # This is how we do more complex testing!
    - compare: {header: content-type, comparator: contains, expected: "json"}
    - compare: {jsonpath_mini: "name", expected: "Tigger"}  # JSON extraction
    - compare: {jsonpath_mini: "animal_type", expected: "cat"}  # JSON extraction
    - compare: {jsonpath_mini: "id", comparator: equals, expected: 123}  # JSON extraction
    - extract_test: {jsonpath_mini: "created", test: "exists"}
- test:
  - name: "Delete pet"
  - url: "/pets/123"
  - method: "DELETE"
  - headers: {
      "Accept": "application/json"
    }
  - expected_status: [204]
  - validators:  # This is how we do more complex testing!
    - compare: {header: content-type, comparator: contains, expected: "json"}
    - compare: {header: content-length, comparator: str_eq, expected: "0"}
    - compare: {raw_body: "", expected: "" }  # Tests on raw response
- test:
  - name: "Get pet"
  - url: "/pets/123"
  - method: "GET"
  - headers: {
      "Accept": "application/json"
    }
  - expected_status: [404]
  - validators:  # This is how we do more complex testing!
    - compare: {header: content-type, comparator: contains, expected: "json"}
    - compare: {header: content-length, comparator: str_eq, expected: "12"}
    - compare: {raw_body: "", comparator: contains, expected: "Not found" }  # Tests on raw response
- test:
  - name: "Create pet with dynamic assigned id"
  - url: "/pets"
  - method: "POST"
  - headers: {
      "Accept": "application/json",
      "Content-Type": "application/json"
    }
  - body: '{
      "animal_type": "dog",
      "name": "Buster",
      "tags": {}
    }'
  - expected_status: [201]
  - validators:  # This is how we do more complex testing!
    - compare: {header: content-type, comparator: contains, expected: "json"}
    - compare: {jsonpath_mini: "name", expected: "Buster"}  # JSON extraction
  - extract_binds:
    - "id": {"jsonpath_mini": "id"}
- test:
  - name: "Get pet with dynamic assigned id"
  - url: {"template": "/pets/$id"}
  - method: "GET"
  - headers: {
      "Accept": "application/json"
    }
  - expected_status: [200]
  - validators:  # This is how we do more complex testing!
    - compare: {header: content-type, comparator: contains, expected: "json"}
    - compare: {jsonpath_mini: "name", expected: "Buster"}  # JSON extraction
    - compare: {jsonpath_mini: "animal_type", expected: "dog"}  # JSON extraction
    - compare: {jsonpath_mini: "id", comparator: str_eq, expected: {template: "$id"}}
    - extract_test: {jsonpath_mini: "created", test: "exists"}
- test:
  - name: "Delete pet with dynamic assigned id"
  - url: {"template": "/pets/$id"}
  - method: "DELETE"
  - headers: {
      "Accept": "application/json"
    }
  - expected_status: [204]
  - validators:  # This is how we do more complex testing!
    - compare: {header: content-type, comparator: contains, expected: "json"}
    - compare: {header: content-length, comparator: str_eq, expected: "0"}
    - compare: {raw_body: "", expected: "" }  # Tests on raw response
